// Generated by CoffeeScript 1.6.3
(function() {
  var Promise, awsId, awsSecret, awsTag, crypto, generateQueryString, generateSignature, generateTimestamp, get, http;

  http = require('http');

  crypto = require('crypto');

  Promise = require('es6-promise').Promise;

  awsId = process.env.AWS_ID;

  awsSecret = process.env.AWS_SECRET;

  awsTag = process.env.AWS_TAG;

  generateTimestamp = function() {
    var addZero, day, hours, mins, month, now, secs, timestamp, year;
    addZero = function(number) {
      if ((10 > number && number >= 0)) {
        return "0" + number;
      } else {
        return number + "";
      }
    };
    now = new Date();
    year = now.getUTCFullYear();
    month = addZero(now.getUTCMonth() + 1);
    day = addZero(now.getUTCDate());
    hours = addZero(now.getUTCHours());
    mins = addZero(now.getUTCMinutes());
    secs = addZero(now.getUTCSeconds());
    return timestamp = [year, month, day].join('-') + 'T' + [hours, mins, secs].join(':') + 'Z';
  };

  generateSignature = function(stringToSign) {
    var hmac, secretKey;
    secretKey = awsSecret;
    hmac = crypto.createHmac('sha256', secretKey);
    hmac.update(stringToSign);
    return hmac.digest('base64');
  };

  generateQueryString = function() {
    var queryString, signature, unsignedString;
    unsignedString = "AWSAccessKeyId=" + awsId + "&AssociateTag=" + awsTag + "&Condition=All&Keywords=" + (escape('alien 3')) + "&Operation=ItemSearch&ResponseGroup=ItemAttributes&SearchIndex=All&Service=AWSECommerceService&Timestamp=" + (escape(generateTimestamp())) + "&Version=2011-08-01";
    signature = generateSignature('GET\nwebservices.amazon.com\n/onca/xml\n' + unsignedString);
    return queryString = 'http://webservices.amazon.com/onca/xml?' + unsignedString + '&Signature=' + escape(signature);
  };

  get = function(url) {
    return new Promise(function(resolve, reject) {
      var request;
      request = http.get(url, function(response) {
        console.log("Got response: " + response.statusCode);
        if (response.statusCode === 200) {
          resolve("suca");
        } else {
          reject("err!");
        }
      });
      return request.on('error', function(error) {
        return reject(error);
      });
    });
  };

  console.log("async!");

}).call(this);
